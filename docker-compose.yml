x-app: &default-app
  build:
    context: "."
    target: "${MIX_ENV:-prod}"
    args:
      - "MIX_ENV=${MIX_ENV:-prod}"
  depends_on:
    - postgres
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "${DOCKER_WEB_VOLUME:-./priv/static:/app/priv/static}"

services:
  postgres:
    # container_name: database
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    env_file:
      - .env
    image: "postgres:14.2-alpine"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    tty: true
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  web:
    <<: *default-app
    # container_name: app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    env_file:
      - ".env"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:8000"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    tty: true

# volumes:
#   postgres: {}